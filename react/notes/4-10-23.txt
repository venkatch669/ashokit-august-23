topic : mui & routing
		grid
			desktop	- lg 
			tablet 	- sm 
			mobile  - xs
			
			css | scss | jss (styled components)
			
	SPA - 
		page shouldn't refresh ... 
		single page applications
			- you page is not going to refresh 
				header 
					body
						sidebar
						other components 
				footer 
				
				---------------------
				home aboutus services contactus 
					[body]//services 
				footer
		react-router 
			- basic routing 
			- nested routing 
			- dynamic routing 
				1. go though the official documetnation 
				2. npm install react-router-dom
				3. go to index.tsx 
					3.1 import browser router 
						import { BrowserRouter } from "react-router-dom";
					3.2 wrap <app> with browserRouter 
						<BrowserRouter>
						  <App />
						</BrowserRouter>
				4. go to app.tsx as per documentation add below code .
					
					4.1
						<Routes>
						  <Route path="/" element={<Layout />}>
							<Route index element={<Home />} />
							<Route path="about" element={<About />} />
							<Route path="dashboard" element={<Dashboard />} />

							{/* Using path="*"" means "match anything", so this route
								  acts like a catch-all for URLs that we don't have explicit
								  routes for. */}
							<Route path="*" element={<NoMatch />} />
						  </Route>
						</Routes>
					4.2 -  import required depedencies 
						import { Routes, Route, Outlet, Link } from "react-router-dom";
				5. create required components as per your requirment 
					Layout 
					Home 
					...
					
				6. copy below code into layout component 
					Link components is kind <a> (anchor tag)
						<nav>
						<ul>
						  <li>
							<Link to="/">Home</Link> 
							{/* <a href=""/> */}
						  </li>
						  <li>
							<Link to="/about">About</Link>
						  </li>
						  <li>
							<Link to="/dashboard">Dashboard</Link>
						  </li>
						  <li>
							<Link to="/nothing-here">Nothing Here</Link>
						  </li>
						</ul>
					  </nav>

					  <hr />

					  {/* An <Outlet> renders whatever child route is currently active,
						  so you can think about this <Outlet> as a placeholder for
						  the child routes we defined above. */}
					  <Outlet />
				
					
						
				
					 
